# This is MySQL configuration file that I made exclusively for MacOS, and personal project only.
# During the process of configuring MySQL on Mac, I found that directories are different from the manual,
# Although you can locate them easily, I will still explain all options listed for the ease of beginners
# Machine's info: Mac Silicon
# If you don't understand any part of the configuration, look for it in MySQL manual.
# Hope this file is helpful. Thanks so much!

# __________Basic setup__________
[mysql]
port                            = 3306
socket                          = /tmp/mysql.sock

[mysqld]
# These are default directories, you can create your own directory and replace it with the default.
basedir                         = /usr/local/mysql
datadir                         = /usr/local/mysql/data

max_allowed_packet              = 128M
# Default = 16M
# Packet means chunks of data send back and forth from client and server, or a replication source to a replica, each has maximum value of 2^24 byte (16M)

max_connect_errors              = 1000
# Default = 100
# User will be block if exceed 100 successive connection fails, the user is block from any further connections.

# Following are default and no need to be configured
# pid_file                   	= /usr/local/mysql/data/mysqld.local.pid
# port                   	= 3306
# socket                 	= /private/tmp/mysql.sock.lock
# tmpdir                        = /tmp

# skip_external_locking
# This is for MyISAM storage engine, default engine of mysql 8.0 is InnoDB, so you wont need this option
# See here https://dev.mysql.com/doc/refman/8.0/en/external-locking.html

# skip_name_resolve
# This is for disabling DNS host name lookups
# see here https://dev.mysql.com/doc/refman/8.0/en/host-cache.html


# __________InnoDB Settings__________

# default_storage_engine        = InnoDB
# InnoDB is already the default engine for MySQL 8.0

innodb_buffer_pool_instances    = 1
# Default value is 8 or 1 (if pool size < 1G), min value is 1; max value is 64
# In this case 1 instance takes whole 1GB of InnoDB pool size
# If buffer pool size is larger than 1.3G, the instances number will be pool size/128M, so make sure you set instance number to a certain value
# This option only come into effect if innodb_buffer_pool_size > 1G

innodb_buffer_pool_size         = 1G
# Default is 128M
# Use up to 80% of RAM on a dedicated database server

innodb_file_per_table           = 1
# Check folder mysql/data/ to see each table is saved in 1 .ibd file
# The default value is ON, if you set it to 0 (OFF), the tables data are saved in file ibdata1

innodb_flush_log_at_trx_commis  = 1
# Three values for setting: 0, 1, 2.
# 1: Default. Logs are written and flushed to disk at each transaction commit. This setting is for ACID.
# 0: logs are written and flushed to disk once per second.
# 2: logs are written after each transaction commit and flushed to disk once per second.
# In the case of setting 0 and 2, transactions for which logs have not been flushed can be lost in a crash.

innodb_flush_method             = fsync
# You don't actually need to 
# See here: https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_method

# innodb_log_buffer_size          = 16M
# The default value changed from 8MB to 16MB with the introduction of 32KB and 64KB innodb_page_size values

innodb_log_file_size            = 96M
# Default value is 48M

innodb_sort_buffer_size         = 4M    # UPD - Defines how much data is read into memory for sorting operations before writing to disk (default is 1M / max is 64M)
innodb_stats_on_metadata        = 0
#innodb_use_fdatasync           = 1     # Only (!) for MySQL v8.0.26+

#innodb_temp_data_file_path     = ibtmp1:64M:autoextend:max:20G # Control the maximum size for the ibtmp1 file
#innodb_thread_concurrency      = 4     # Optional: Set to the number of CPUs on your system (minus 1 or 2) to better
                                        # contain CPU usage. E.g. if your system has 8 CPUs, try 6 or 7 and check
                                        # the overall load produced by MySQL/MariaDB.
innodb_read_io_threads          = 64
innodb_write_io_threads         = 64
#innodb_io_capacity             = 2000  # Depends on the storage tech - use 2000 for SSD, more for NVMe
#innodb_io_capacity_max         = 4000  # Usually double the value of innodb_io_capacity


# === Buffer Settings ===
# Handy tip for managing your database's RAM usage:
# The following values should be treated carefully as they are added together and then multiplied by your "max_connections" value.
# Other options will also add up to RAM consumption (e.g. tmp_table_size). So don't go switching your "join_buffer_size" to 1G, it's harmful & inefficient.
# Use one of the database diagnostics tools mentioned at the top of this file to count your database's potential total RAM usage, so you know if you are within
# reasonable limits. Remember that other services will require enough RAM to operate properly (like Apache or PHP-FPM), so set your limits wisely.
join_buffer_size                = 4M    # UPD
read_buffer_size                = 3M    # UPD
read_rnd_buffer_size            = 4M    # UPD
sort_buffer_size                = 4M    # UPD

# === Table Settings ===
# In systemd managed systems like Ubuntu 16.04+ or CentOS 7+, you need to perform an extra action for table_open_cache & open_files_limit
# to be overriden (also see comment next to open_files_limit).
# E.g. for MySQL 5.7, please check: https://dev.mysql.com/doc/refman/5.7/en/using-systemd.html
# and for MariaDB check: https://mariadb.com/kb/en/library/systemd/
table_definition_cache          = 40000 # UPD
table_open_cache                = 40000 # UPD
open_files_limit                = 60000 # UPD - This can be 2x to 3x the table_open_cache value or match the system's
                                        # open files limit usually set in /etc/sysctl.conf and /etc/security/limits.conf
                                        # In systemd managed systems this limit must also be set in:
                                        # - /etc/systemd/system/mysql.service.d/override.conf (for MySQL 5.7+ in Ubuntu) or
                                        # - /etc/systemd/system/mysqld.service.d/override.conf (for MySQL 5.7+ in CentOS) or
                                        # - /etc/systemd/system/mariadb.service.d/override.conf (for MariaDB)
                                        # otherwise changing open_files_limit will have no effect.
                                        #
                                        # To edit the right file execute:
                                        # $ systemctl edit mysql (or mysqld or mariadb)
                                        # and set "LimitNOFILE=" to something like 100000 or more (depending on your system limits for MySQL)
                                        # or use "LimitNOFILE=infinity" for MariaDB only.
                                        # Finally merge the changes with:
                                        # $ systemctl daemon-reload; systemctl restart mysql (or mysqld or mariadb)

max_heap_table_size             = 128M  # Increase to 256M or 512M if you have lots of temporary tables because of missing indices in JOINs
tmp_table_size                  = 128M  # Use same value as max_heap_table_size

# === Search Settings ===
ft_min_word_len                 = 3     # Minimum length of words to be indexed for search results

# === Binary Logging ===
disable_log_bin                 = 1     # Binary logging disabled by default
#log_bin                                # To enable binary logging, uncomment this line & only one of the following 2 lines
                                        # that corresponds to your actual MySQL/MariaDB version.
                                        # Remember to comment out the line with "disable_log_bin".
#expire_logs_days               = 1     # Keep logs for 1 day - For MySQL 5.x & MariaDB before 10.6 only
#binlog_expire_logs_seconds     = 86400 # Keep logs for 1 day (in seconds) - For MySQL 8+ & MariaDB 10.6+ only

# __________Logs__________

log_error                       = /usr/local/mysql/data/mysqld.local.err
log_queries_not_using_indexes   = 0     # Disabled on production
long_query_time                 = 5
slow_query_log                  = 0     # Disabled on production
slow_query_log_file             = /usr/local/mysql/data/host_name-slow.log

[mysqldump]
quick
quote_names
max_allowed_packet              = 1024M
